# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './gui2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(470, 772)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 30, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(30, 80, 131, 31))
        self.comboBox.setObjectName("comboBox")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 130, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(30, 190, 301, 31))
        self.comboBox_2.setObjectName("comboBox_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 340, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.comboBox_3 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_3.setGeometry(QtCore.QRect(30, 400, 211, 31))
        self.comboBox_3.setObjectName("comboBox_3")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 250, 281, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 300, 113, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(30, 680, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(30, 500, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox.setFont(font)
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(30, 530, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setGeometry(QtCore.QRect(30, 560, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_3.setFont(font)
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox_4 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_4.setGeometry(QtCore.QRect(30, 590, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_4.setFont(font)
        self.checkBox_4.setObjectName("checkBox_4")
        self.checkBox_5 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_5.setGeometry(QtCore.QRect(30, 620, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_5.setFont(font)
        self.checkBox_5.setObjectName("checkBox_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(30, 440, 301, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.checkBox_6 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_6.setGeometry(QtCore.QRect(200, 490, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_6.setFont(font)
        self.checkBox_6.setObjectName("checkBox_6")
        self.checkBox_8 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_8.setGeometry(QtCore.QRect(200, 520, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_8.setFont(font)
        self.checkBox_8.setObjectName("checkBox_8")
        self.checkBox_9 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_9.setGeometry(QtCore.QRect(200, 550, 261, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_9.setFont(font)
        self.checkBox_9.setObjectName("checkBox_9")
        self.checkBox_10 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_10.setGeometry(QtCore.QRect(200, 580, 261, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_10.setFont(font)
        self.checkBox_10.setObjectName("checkBox_10")
        self.checkBox_11 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_11.setGeometry(QtCore.QRect(200, 610, 261, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_11.setFont(font)
        self.checkBox_11.setObjectName("checkBox_11")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # add items to trait combobox
        self.comboBox.addItems(self.get_trait_names())

        # add items to classifier combobox
        self.comboBox_2.addItems(self.get_model_names())

        # add items to feature selector combobox
        self.comboBox_3.addItems(self.get_feature_selection_method_names())

        # assign action when button is clicked
        self.pushButton.clicked.connect(self.button_clicked)

    def get_scoring_values(self):
        checked_text = []
        checkboxes = [
            self.checkBox, self.checkBox_2, self.checkBox_3, self.checkBox_4, self.checkBox_5,
            self.checkBox_6, self.checkBox_8, self.checkBox_9, self.checkBox_10,
            self.checkBox_11
        ]
        for checkbox in checkboxes:
            if checkbox.isChecked():
                checked_text.append(checkbox.text())

        return checked_text

    def button_clicked(self):
        from dataAccess import DataAccessManager
        from utils import ModelNames, FeatSelectorNames
        from featureSelection import FeatureSelector
        from classifiers import Classifier

        trait = self.comboBox.currentText()
        model_name = self.comboBox_2.currentText()
        feat_selector_name = self.comboBox_3.currentText()
        n_feats = int(self.lineEdit.text())

        # obtain the data
        dtAccess = DataAccessManager()
        data = dtAccess.get_data(trait[0])
        labels = data['class']
        data = data.drop('class', axis=1)
        data = data.drop('SF_min', axis=1)

        # select scorer, classifier, feature selection method
        scorers = self.get_scoring_values()
        featSelector = FeatureSelector(feat_selector_name, model_name, n_feats)
        selector = featSelector.get_feature_selector()

        # train model
        classifier = Classifier(data, labels, trait, scorers=scorers, feature_selector=selector)
        classifier.train_model(model_name)

    def get_feature_selection_method_names(self):
        from utils import FeatSelectorNames
        feat_selectors = []
        for attr in dir(FeatSelectorNames):
            if not callable(getattr(FeatSelectorNames, attr)) and not attr.startswith("__"):
                feat_selectors.append(getattr(FeatSelectorNames, attr))
        return feat_selectors

    def get_model_names(self):
        from utils import ModelNames
        model_names = []
        for attr in dir(ModelNames):
            if not callable(getattr(ModelNames, attr)) and not attr.startswith("__"):
                model_names.append(getattr(ModelNames, attr))
        return model_names
    
    def get_trait_names(self):
        return ['openess', 'consiousness', 'extraversion', 'agreeableness', 'neurotism']

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Pick classifier"))
        self.label_3.setText(_translate("MainWindow", "Pick feature selection method"))
        self.label_4.setText(_translate("MainWindow", "Pick trait"))
        self.label_5.setText(_translate("MainWindow", "Number of features to keep"))
        self.pushButton.setText(_translate("MainWindow", "TRAIN"))
        self.checkBox.setText(_translate("MainWindow", "accuracy"))
        self.checkBox_2.setText(_translate("MainWindow", "precision"))
        self.checkBox_3.setText(_translate("MainWindow", "recall"))
        self.checkBox_4.setText(_translate("MainWindow", "f1"))
        self.checkBox_5.setText(_translate("MainWindow", "roc_auc"))
        self.label_6.setText(_translate("MainWindow", "Pick scoring values"))
        self.checkBox_6.setText(_translate("MainWindow", "neg_mean_squared_error"))
        self.checkBox_8.setText(_translate("MainWindow", "neg_mean_absolute_error"))
        self.checkBox_9.setText(_translate("MainWindow", "r2"))
        self.checkBox_10.setText(_translate("MainWindow", "balanced_accuracy"))
        self.checkBox_11.setText(_translate("MainWindow", "neg_log_loss"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
